---
export interface Props {
    name?: string;
}

const { name = "nowex35" } = Astro.props;
---

<nav class="fixed top-0 w-full bg-slate-900/80 backdrop-blur-md z-50 border-b border-orange-500/20">
    <div class="max-w-6xl mx-auto px-6 py-4">
        <div class="flex justify-between items-center">
            <div class="flex items-center space-x-3">
                <span class="text-3xl">üî•</span>
                <span class="text-2xl font-black text-white tracking-tight">{name}</span>
            </div>
            <!-- Desktop Navigation -->
            <div class="hidden md:flex space-x-10">
                <a href="#about" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">About</a>
                <a href="#growth-visualization" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">Experience</a>
                <a href="#projects" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">Projects</a>
                <a href="#links" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">Links</a>
                <a href="/game" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">Game</a>
                <a href="/diary" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">Diary</a>
                <a href="/counsel" class="text-gray-300 hover:text-orange-400 transition-colors text-lg font-medium">Counseling</a>
            </div>
            
            <!-- Mobile Navigation Button -->
            <button id="mobile-menu-button" class="md:hidden text-white focus:outline-none">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
        </div>
    </div>
    
    <!-- Mobile Navigation Menu -->
    <div id="mobile-menu" class="hidden md:hidden bg-slate-900/95 backdrop-blur-md border-t border-orange-500/20">
        <div class="px-6 py-4 space-y-4">
            <a href="#about" class="block text-gray-300 hover:text-orange-400 transition-colors">About</a>
            <a href="#growth-visualization" class="block text-gray-300 hover:text-orange-400 transition-colors">Experience</a>
            <a href="#projects" class="block text-gray-300 hover:text-orange-400 transition-colors">Projects</a>
            <a href="#links" class="block text-gray-300 hover:text-orange-400 transition-colors">Links</a>
            <a href="/game" class="block text-gray-300 hover:text-orange-400 transition-colors">Game</a>
            <a href="/diary" class="block text-gray-300 hover:text-orange-400 transition-colors">Diary</a>
            <a href="/counsel" class="block text-gray-300 hover:text-orange-400 transition-colors">ÊÇ©„ÅøÁõ∏Ë´á</a>
        </div>
    </div>
</nav>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Mobile menu functionality
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', (e) => {
            e.stopPropagation();
            mobileMenu.classList.toggle('hidden');
        });

        // Close mobile menu when clicking on links
        document.querySelectorAll('#mobile-menu a').forEach(link => {
            link.addEventListener('click', () => {
                mobileMenu.classList.add('hidden');
            });
        });

        // Close mobile menu when clicking outside
        document.addEventListener('click', (e) => {
            if (!mobileMenuButton.contains(e.target as Node) && !mobileMenu.contains(e.target as Node)) {
                mobileMenu.classList.add('hidden');
            }
        });
    }

    // Add scroll effect to navigation
    let ticking = false;
    
    function updateNavigation() {
        const nav = document.querySelector('nav');
        if (nav) {
            if (window.scrollY > 50) {
                nav.classList.add('bg-slate-900/95');
                nav.classList.remove('bg-slate-900/80');
            } else {
                nav.classList.remove('bg-slate-900/95');
                nav.classList.add('bg-slate-900/80');
            }
        }
        ticking = false;
    }

    window.addEventListener('scroll', () => {
        if (!ticking) {
            requestAnimationFrame(updateNavigation);
            ticking = true;
        }
    });

    // Smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', (e) => {
            e.preventDefault();
            const href = (anchor as HTMLAnchorElement).getAttribute('href');
            const target = href ? document.querySelector(href) : null;
            if (target) {
                const headerHeight = 80; // Account for fixed header
                const targetPosition = (target as HTMLElement).offsetTop - headerHeight;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
            }
        });
    });
});
</script>